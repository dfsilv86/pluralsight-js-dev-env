// <auto-generated/>
// Gerador para auxiliar na localização de arquivos SQL.
// Os códigos deste arquivo serão compilados.

<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System.Diagnostics.CodeAnalysis;

namespace Walmart.Sgp.Infrastructure.Data
{ 
    /// <summary>
    /// Acesso aos arquivos de comandos SQL.
    /// </summary>     
    [SuppressMessage("Microsoft.Naming", "CA1724:TypeNamesShouldNotMatchNamespaces")]
    internal static class Sql  
    {
        <#
        var root = Host.ResolvePath(".") + "/";
        var files = Directory.GetFiles(root, "*.sql").Select(f => f.Replace(root, ""));
        var classNames = files.GroupBy(f => f.Split('.')[0]);

        foreach(var c in classNames)
        {
            #>/// <summary>
        /// Comandos SQL relacionados a classe <#=c.Key#>.
        /// </summary>
        public static class <#=c.Key#> 
        {  
            <#
                foreach(var f in c)
                {
            #>
/// <summary>
            /// O nome do comando SQL existente no arquivo <#=f#>.
            /// </summary>
            public static readonly CommandInfo <#=f.Split('.')[1]#> = new CommandInfo( "<#=f.Split('.')[1]#>", "<#=f.Split('.')[0]#>", "<#=f#>");
            <#
                }
#>
}
        <#
        }
        #>}
    }
